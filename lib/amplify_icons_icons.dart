// Copyright 2023 hanmajid (Muhammad Farhan Majid)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import 'package:flutter/widgets.dart';

/// Class containing Amplify icons.
///
/// This font was generated by FlutterIcon.com.
class AmplifyIcons {
  /// No need for constructor. All properties are static.
  AmplifyIcons._();

  /// Default Airtable icons family name.
  static const _kFontFam = 'AmplifyIcons';

  /// Airtable icons package name.
  static const String? _kFontPkg = 'amplify_icons';

  /// Icon data for 'alert' glyph.
  static const IconData alert =
      IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'arrow_right' glyph.
  static const IconData arrow_right =
      IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'favorite_border' glyph.
  static const IconData favorite_border =
      IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'close' glyph.
  static const IconData close =
      IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'chat' glyph.
  static const IconData chat =
      IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'chat_bubble_outline' glyph.
  static const IconData chat_bubble_outline =
      IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'email' glyph.
  static const IconData email =
      IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'file' glyph.
  static const IconData file =
      IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'checkmark' glyph.
  static const IconData checkmark =
      IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'content' glyph.
  static const IconData content =
      IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'dashboard' glyph.
  static const IconData dashboard =
      IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'edit' glyph.
  static const IconData edit =
      IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'info' glyph.
  static const IconData info =
      IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'data' glyph.
  static const IconData data =
      IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'notification' glyph.
  static const IconData notification =
      IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'favorite' glyph.
  static const IconData favorite =
      IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'authentication' glyph.
  static const IconData authentication =
      IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'instagram' glyph.
  static const IconData instagram =
      IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'bookmark_border' glyph.
  static const IconData bookmark_border =
      IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'group' glyph.
  static const IconData group =
      IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'function' glyph.
  static const IconData function =
      IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'share' glyph.
  static const IconData share =
      IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'more_horiz' glyph.
  static const IconData more_horiz =
      IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'reply' glyph.
  static const IconData reply =
      IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'send' glyph.
  static const IconData send =
      IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'location' glyph.
  static const IconData location =
      IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'more_vert' glyph.
  static const IconData more_vert =
      IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'shopping_bag' glyph.
  static const IconData shopping_bag =
      IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'settings' glyph.
  static const IconData settings =
      IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'shuffle' glyph.
  static const IconData shuffle =
      IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'home' glyph.
  static const IconData home =
      IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'storage' glyph.
  static const IconData storage =
      IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'twitter' glyph.
  static const IconData twitter =
      IconData(0xe820, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'warning' glyph.
  static const IconData warning =
      IconData(0xe821, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'delete' glyph.
  static const IconData delete =
      IconData(0xe822, fontFamily: _kFontFam, fontPackage: _kFontPkg);

  /// Icon data for 'phone' glyph.
  static const IconData phone =
      IconData(0xe823, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
